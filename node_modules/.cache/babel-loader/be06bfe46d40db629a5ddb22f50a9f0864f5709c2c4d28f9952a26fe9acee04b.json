{"ast":null,"code":"var _jsxFileName = \"/Users/mpechardo/Desktop/NVIDIA/Research Labs Template Hub/src/components/SingleMediaSection/SingleMediaSectionShowcase.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport SingleMediaSection from './SingleMediaSection';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowcaseContainer = styled.div`\n  margin-bottom: 2rem;\n  padding: 2rem;\n  background-color: var(--color-gray-0);\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c = ShowcaseContainer;\nconst ShowcaseTitle = styled.h2`\n  font-size: 24px;\n  text-transform: uppercase;\n`;\n_c2 = ShowcaseTitle;\nconst ExampleContainer = styled.div`\n  border: 1px solid var(--color-gray-200);\n  border-radius: 4px;\n  margin: 1rem 0;\n`;\n_c3 = ExampleContainer;\nconst CodeBlock = styled.div`\n  position: relative;\n  margin-top: 1rem;\n  background-color: var(--color-gray-50);\n  border-radius: 4px;\n  overflow: hidden;\n\n  pre {\n    margin: 0 !important;\n  }\n`;\n_c4 = CodeBlock;\nconst CopyButton = styled.button`\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  padding: 0.5rem 1rem;\n  background-color: var(--color-brand);\n  color: var(--color-gray-0);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: var(--color-brand-hover);\n  }\n`;\n_c5 = CopyButton;\nconst sectionCode = `<!-- ===== 1 Image Section: Single image with caption ===== -->\\n<div class=\\\"nv-section\\\">\\n  <div class=\\\"nv-container\\\">\\n    <div class=\\\"nv-h--medium mb-3\\\">\\n      Pipeline Overview\\n    </div>\\n    <p class=\\\"nv-text-large mb-5\\\">\\n      The following diagram illustrates the pipeline of our 3D scene generation method.\\n    </p>\\n    <div style=\\\"display: flex; flex-direction: column; align-items: center;\\\">\\n      <img \\n        src=\\\"https://research.nvidia.com/labs/dir/scenethesis/assets/pipeline.png\\\"\\n        alt=\\\"Pipeline Overview\\\"\\n        style=\\\"width: 100%; max-width: 700px; border-radius: 4px;\\\"\\n      />\\n      <p class=\\\"nv-text-medium mt-3\\\" style=\\\"text-align: center;\\\">\\n        SceneThesis pipeline for text-to-3D scene generation.\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n<!-- ===== End 1 Media Section ===== -->`;\nconst SingleMediaSectionShowcase = () => {\n  const handleCopyCode = () => {\n    navigator.clipboard.writeText(sectionCode);\n  };\n  return /*#__PURE__*/_jsxDEV(ShowcaseContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ShowcaseTitle, {\n      children: \"1 Media Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A section component with a single image, following NVIDIA's design system.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExampleContainer, {\n      children: /*#__PURE__*/_jsxDEV(SingleMediaSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n      children: [/*#__PURE__*/_jsxDEV(CopyButton, {\n        onClick: handleCopyCode,\n        children: \"Copy Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        language: \"html\",\n        style: tomorrow,\n        children: sectionCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c6 = SingleMediaSectionShowcase;\nexport default SingleMediaSectionShowcase;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ShowcaseContainer\");\n$RefreshReg$(_c2, \"ShowcaseTitle\");\n$RefreshReg$(_c3, \"ExampleContainer\");\n$RefreshReg$(_c4, \"CodeBlock\");\n$RefreshReg$(_c5, \"CopyButton\");\n$RefreshReg$(_c6, \"SingleMediaSectionShowcase\");","map":{"version":3,"names":["React","styled","SingleMediaSection","Prism","SyntaxHighlighter","tomorrow","jsxDEV","_jsxDEV","ShowcaseContainer","div","_c","ShowcaseTitle","h2","_c2","ExampleContainer","_c3","CodeBlock","_c4","CopyButton","button","_c5","sectionCode","SingleMediaSectionShowcase","handleCopyCode","navigator","clipboard","writeText","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","language","style","_c6","$RefreshReg$"],"sources":["/Users/mpechardo/Desktop/NVIDIA/Research Labs Template Hub/src/components/SingleMediaSection/SingleMediaSectionShowcase.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport SingleMediaSection from './SingleMediaSection';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst ShowcaseContainer = styled.div`\n  margin-bottom: 2rem;\n  padding: 2rem;\n  background-color: var(--color-gray-0);\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst ShowcaseTitle = styled.h2`\n  font-size: 24px;\n  text-transform: uppercase;\n`;\n\nconst ExampleContainer = styled.div`\n  border: 1px solid var(--color-gray-200);\n  border-radius: 4px;\n  margin: 1rem 0;\n`;\n\nconst CodeBlock = styled.div`\n  position: relative;\n  margin-top: 1rem;\n  background-color: var(--color-gray-50);\n  border-radius: 4px;\n  overflow: hidden;\n\n  pre {\n    margin: 0 !important;\n  }\n`;\n\nconst CopyButton = styled.button`\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  padding: 0.5rem 1rem;\n  background-color: var(--color-brand);\n  color: var(--color-gray-0);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: var(--color-brand-hover);\n  }\n`;\n\nconst sectionCode = `<!-- ===== 1 Image Section: Single image with caption ===== -->\\n<div class=\\\"nv-section\\\">\\n  <div class=\\\"nv-container\\\">\\n    <div class=\\\"nv-h--medium mb-3\\\">\\n      Pipeline Overview\\n    </div>\\n    <p class=\\\"nv-text-large mb-5\\\">\\n      The following diagram illustrates the pipeline of our 3D scene generation method.\\n    </p>\\n    <div style=\\\"display: flex; flex-direction: column; align-items: center;\\\">\\n      <img \\n        src=\\\"https://research.nvidia.com/labs/dir/scenethesis/assets/pipeline.png\\\"\\n        alt=\\\"Pipeline Overview\\\"\\n        style=\\\"width: 100%; max-width: 700px; border-radius: 4px;\\\"\\n      />\\n      <p class=\\\"nv-text-medium mt-3\\\" style=\\\"text-align: center;\\\">\\n        SceneThesis pipeline for text-to-3D scene generation.\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n<!-- ===== End 1 Media Section ===== -->`;\n\nconst SingleMediaSectionShowcase = () => {\n  const handleCopyCode = () => {\n    navigator.clipboard.writeText(sectionCode);\n  };\n\n  return (\n    <ShowcaseContainer>\n      <ShowcaseTitle>1 Media Section</ShowcaseTitle>\n      <p>A section component with a single image, following NVIDIA's design system.</p>\n\n      {/* ===== 1 Media Section: Single image with caption ===== */}\n      <ExampleContainer>\n        <SingleMediaSection />\n      </ExampleContainer>\n      {/* ===== End 1 Media Section ===== */}\n\n      <CodeBlock>\n        <CopyButton onClick={handleCopyCode}>Copy Code</CopyButton>\n        <SyntaxHighlighter language=\"html\" style={tomorrow}>\n          {sectionCode}\n        </SyntaxHighlighter>\n      </CodeBlock>\n    </ShowcaseContainer>\n  );\n};\n\nexport default SingleMediaSectionShowcase; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}