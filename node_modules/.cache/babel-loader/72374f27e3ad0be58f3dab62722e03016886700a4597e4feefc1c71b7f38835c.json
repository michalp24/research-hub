{"ast":null,"code":"var _jsxFileName = \"/Users/mpechardo/Desktop/NVIDIA/Research Labs Template Hub/src/components/MediaSection/MediaSection.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaSection = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nv-section\",\n    style: {\n      paddingTop: '90px',\n      paddingBottom: '90px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nv-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nv-h--medium mb-3\",\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nv-text-large mb-5\",\n        children: \"Our method generates high-quality 3D scenes from text descriptions, demonstrating robust performance across various scenarios.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            style: {\n              width: '100%',\n              borderRadius: '4px'\n            },\n            controls: true,\n            loop: true,\n            autoplay: true,\n            muted: true,\n            src: \"https://research.nvidia.com/labs/dir/scenethesis/assets/results-billiard.mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"nv-text-medium mt-3\",\n            children: \"Billiard Table Scene Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            style: {\n              width: '100%',\n              borderRadius: '4px'\n            },\n            controls: true,\n            loop: true,\n            autoplay: true,\n            muted: true,\n            src: \"https://research.nvidia.com/labs/dir/scenethesis/assets/results-billiard.mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"nv-text-medium mt-3\",\n            children: \"Billiard Table Scene Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = MediaSection;\nexport default MediaSection;\nvar _c;\n$RefreshReg$(_c, \"MediaSection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MediaSection","className","style","paddingTop","paddingBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","width","borderRadius","controls","loop","autoplay","muted","src","_c","$RefreshReg$"],"sources":["/Users/mpechardo/Desktop/NVIDIA/Research Labs Template Hub/src/components/MediaSection/MediaSection.js"],"sourcesContent":["import React from 'react';\n\nconst MediaSection = () => {\n  return (\n    <div className=\"nv-section\" style={{ paddingTop: '90px', paddingBottom: '90px' }}>\n      <div className=\"nv-container\">\n        <div className=\"nv-h--medium mb-3\">\n          Results\n        </div>\n        <p className=\"nv-text-large mb-5\">\n          Our method generates high-quality 3D scenes from text descriptions, demonstrating robust performance across various scenarios.\n        </p>\n        \n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '2rem' }}>\n          <div>\n            <video style={{ width: '100%', borderRadius: '4px' }} controls loop autoplay muted src=\"https://research.nvidia.com/labs/dir/scenethesis/assets/results-billiard.mp4\"></video>\n            <p className=\"nv-text-medium mt-3\">\n              Billiard Table Scene Generation\n            </p>\n          </div>\n          <div>\n            <video style={{ width: '100%', borderRadius: '4px' }} controls loop autoplay muted src=\"https://research.nvidia.com/labs/dir/scenethesis/assets/results-billiard.mp4\"></video>\n            <p className=\"nv-text-medium mt-3\">\n              Billiard Table Scene Generation\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MediaSection; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACED,OAAA;IAAKE,SAAS,EAAC,YAAY;IAACC,KAAK,EAAE;MAAEC,UAAU,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC/EN,OAAA;MAAKE,SAAS,EAAC,cAAc;MAAAI,QAAA,gBAC3BN,OAAA;QAAKE,SAAS,EAAC,mBAAmB;QAAAI,QAAA,EAAC;MAEnC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNV,OAAA;QAAGE,SAAS,EAAC,oBAAoB;QAAAI,QAAA,EAAC;MAElC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEJV,OAAA;QAAKG,KAAK,EAAE;UAAEQ,OAAO,EAAE,MAAM;UAAEC,mBAAmB,EAAE,SAAS;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAP,QAAA,gBAC3EN,OAAA;UAAAM,QAAA,gBACEN,OAAA;YAAOG,KAAK,EAAE;cAAEW,KAAK,EAAE,MAAM;cAAEC,YAAY,EAAE;YAAM,CAAE;YAACC,QAAQ;YAACC,IAAI;YAACC,QAAQ;YAACC,KAAK;YAACC,GAAG,EAAC;UAA8E;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9KV,OAAA;YAAGE,SAAS,EAAC,qBAAqB;YAAAI,QAAA,EAAC;UAEnC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNV,OAAA;UAAAM,QAAA,gBACEN,OAAA;YAAOG,KAAK,EAAE;cAAEW,KAAK,EAAE,MAAM;cAAEC,YAAY,EAAE;YAAM,CAAE;YAACC,QAAQ;YAACC,IAAI;YAACC,QAAQ;YAACC,KAAK;YAACC,GAAG,EAAC;UAA8E;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9KV,OAAA;YAAGE,SAAS,EAAC,qBAAqB;YAAAI,QAAA,EAAC;UAEnC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACW,EAAA,GA5BIpB,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}