{"ast":null,"code":"var _jsxFileName = \"/Users/mpechardo/Desktop/NVIDIA/Research Labs Template Hub/src/components/CodeContainer/CodeContainerShowcase.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport CodeContainer from './CodeContainer';\nimport CodeBlockWithExpand from '../Shared/CodeBlockWithExpand';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowcaseContainer = styled.div`\n  margin-bottom: 2rem;\n  padding: 2rem;\n  background-color: var(--color-gray-0);\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c = ShowcaseContainer;\nconst ShowcaseTitle = styled.h2`\n  font-size: 24px;\n  text-transform: uppercase;\n`;\n_c2 = ShowcaseTitle;\nconst ExampleContainer = styled.div`\n  border: 1px solid var(--color-gray-200);\n  border-radius: 4px;\n  margin: 1rem 0;\n`;\n_c3 = ExampleContainer;\nconst CodeContainerShowcase = () => {\n  const exampleCode = `// Example code for scene generation\\nfunction generateScene(description) {\\n  // Initialize scene\\n  const scene = new Scene();\\n\\n  // Process text description\\n  const objects = processDescription(description);\\n\\n  // Add objects to scene\\n  objects.forEach(obj => {\\n    scene.add(obj);\\n  });\\n\\n  return scene;\\n}`;\n  const sectionCode = `<!-- ===== Code Container Section: Example code block with NVIDIA styling ===== -->\n<!-- This section displays a code example with proper syntax highlighting and styling -->\n<div class=\"nv-section\">\n  <!-- Container to center and limit the width of the content -->\n  <div class=\"nv-container\">\n    \n    <!-- ===== SECTION TITLE ===== -->\n    <!-- The main heading for this code example section -->\n    <div class=\"nv-h--medium mb-3\">\n      Code Example\n    </div>\n    <!-- ===== END SECTION TITLE ===== -->\n    \n    <!-- ===== SECTION DESCRIPTION ===== -->\n    <!-- The descriptive text that explains what this code example shows -->\n    <p class=\"nv-text-large mb-5\">\n      Here's an example of how to use our scene generation function.\n    </p>\n    <!-- ===== END SECTION DESCRIPTION ===== -->\n    \n    <!-- ===== CODE CONTAINER ===== -->\n    <!-- The wrapper for the code block with NVIDIA styling -->\n    <div class=\"nv-code-container\">\n      \n      <!-- ===== CODE BLOCK ===== -->\n      <!-- The pre element that contains the formatted code -->\n      <pre class=\"nv-code-block\">\n        <!-- ===== CODE ELEMENT ===== -->\n        <!-- The code element with the actual code content -->\n        <code>// Example code for scene generation\\nfunction generateScene(description) {\\n  // Initialize scene\\n  const scene = new Scene();\\n\\n  // Process text description\\n  const objects = processDescription(description);\\n\\n  // Add objects to scene\\n  objects.forEach(obj => {\\n    scene.add(obj);\\n  });\\n\\n  return scene;\\n}</code>\n        <!-- ===== END CODE ELEMENT ===== -->\n      </pre>\n      <!-- ===== END CODE BLOCK ===== -->\n      \n    </div>\n    <!-- ===== END CODE CONTAINER ===== -->\n    \n  </div>\n</div>\n<!-- ===== End Code Container Section ===== -->`;\n  return /*#__PURE__*/_jsxDEV(ShowcaseContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ShowcaseTitle, {\n      children: \"Code Container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A component for displaying code examples with NVIDIA styling.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExampleContainer, {\n      children: /*#__PURE__*/_jsxDEV(CodeContainer, {\n        title: \"Code Example\",\n        description: \"Here's an example of how to use our scene generation function.\",\n        code: exampleCode,\n        language: \"javascript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeBlockWithExpand, {\n      code: sectionCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c4 = CodeContainerShowcase;\nexport default CodeContainerShowcase;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ShowcaseContainer\");\n$RefreshReg$(_c2, \"ShowcaseTitle\");\n$RefreshReg$(_c3, \"ExampleContainer\");\n$RefreshReg$(_c4, \"CodeContainerShowcase\");","map":{"version":3,"names":["React","styled","CodeContainer","CodeBlockWithExpand","jsxDEV","_jsxDEV","ShowcaseContainer","div","_c","ShowcaseTitle","h2","_c2","ExampleContainer","_c3","CodeContainerShowcase","exampleCode","sectionCode","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","code","language","_c4","$RefreshReg$"],"sources":["/Users/mpechardo/Desktop/NVIDIA/Research Labs Template Hub/src/components/CodeContainer/CodeContainerShowcase.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport CodeContainer from './CodeContainer';\nimport CodeBlockWithExpand from '../Shared/CodeBlockWithExpand';\n\nconst ShowcaseContainer = styled.div`\n  margin-bottom: 2rem;\n  padding: 2rem;\n  background-color: var(--color-gray-0);\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst ShowcaseTitle = styled.h2`\n  font-size: 24px;\n  text-transform: uppercase;\n`;\n\nconst ExampleContainer = styled.div`\n  border: 1px solid var(--color-gray-200);\n  border-radius: 4px;\n  margin: 1rem 0;\n`;\n\nconst CodeContainerShowcase = () => {\n  const exampleCode = `// Example code for scene generation\\nfunction generateScene(description) {\\n  // Initialize scene\\n  const scene = new Scene();\\n\\n  // Process text description\\n  const objects = processDescription(description);\\n\\n  // Add objects to scene\\n  objects.forEach(obj => {\\n    scene.add(obj);\\n  });\\n\\n  return scene;\\n}`;\n\n  const sectionCode = `<!-- ===== Code Container Section: Example code block with NVIDIA styling ===== -->\n<!-- This section displays a code example with proper syntax highlighting and styling -->\n<div class=\"nv-section\">\n  <!-- Container to center and limit the width of the content -->\n  <div class=\"nv-container\">\n    \n    <!-- ===== SECTION TITLE ===== -->\n    <!-- The main heading for this code example section -->\n    <div class=\"nv-h--medium mb-3\">\n      Code Example\n    </div>\n    <!-- ===== END SECTION TITLE ===== -->\n    \n    <!-- ===== SECTION DESCRIPTION ===== -->\n    <!-- The descriptive text that explains what this code example shows -->\n    <p class=\"nv-text-large mb-5\">\n      Here's an example of how to use our scene generation function.\n    </p>\n    <!-- ===== END SECTION DESCRIPTION ===== -->\n    \n    <!-- ===== CODE CONTAINER ===== -->\n    <!-- The wrapper for the code block with NVIDIA styling -->\n    <div class=\"nv-code-container\">\n      \n      <!-- ===== CODE BLOCK ===== -->\n      <!-- The pre element that contains the formatted code -->\n      <pre class=\"nv-code-block\">\n        <!-- ===== CODE ELEMENT ===== -->\n        <!-- The code element with the actual code content -->\n        <code>// Example code for scene generation\\nfunction generateScene(description) {\\n  // Initialize scene\\n  const scene = new Scene();\\n\\n  // Process text description\\n  const objects = processDescription(description);\\n\\n  // Add objects to scene\\n  objects.forEach(obj => {\\n    scene.add(obj);\\n  });\\n\\n  return scene;\\n}</code>\n        <!-- ===== END CODE ELEMENT ===== -->\n      </pre>\n      <!-- ===== END CODE BLOCK ===== -->\n      \n    </div>\n    <!-- ===== END CODE CONTAINER ===== -->\n    \n  </div>\n</div>\n<!-- ===== End Code Container Section ===== -->`;\n\n  return (\n    <ShowcaseContainer>\n      <ShowcaseTitle>Code Container</ShowcaseTitle>\n      <p>A component for displaying code examples with NVIDIA styling.</p>\n\n      {/* ===== Code Container Section: Example code block with NVIDIA styling ===== */}\n      <ExampleContainer>\n        <CodeContainer\n          title=\"Code Example\"\n          description=\"Here's an example of how to use our scene generation function.\"\n          code={exampleCode}\n          language=\"javascript\"\n        />\n      </ExampleContainer>\n      {/* ===== End Code Container Section ===== */}\n\n      <CodeBlockWithExpand code={sectionCode} />\n    </ShowcaseContainer>\n  );\n};\n\nexport default CodeContainerShowcase; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,mBAAmB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,iBAAiB,GAAGL,MAAM,CAACM,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,iBAAiB;AAQvB,MAAMG,aAAa,GAAGR,MAAM,CAACS,EAAE;AAC/B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,aAAa;AAKnB,MAAMG,gBAAgB,GAAGX,MAAM,CAACM,GAAG;AACnC;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAJID,gBAAgB;AAMtB,MAAME,qBAAqB,GAAGA,CAAA,KAAM;EAClC,MAAMC,WAAW,GAAG,kUAAkU;EAEtV,MAAMC,WAAW,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;EAE9C,oBACEX,OAAA,CAACC,iBAAiB;IAAAW,QAAA,gBAChBZ,OAAA,CAACI,aAAa;MAAAQ,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAC7ChB,OAAA;MAAAY,QAAA,EAAG;IAA6D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGpEhB,OAAA,CAACO,gBAAgB;MAAAK,QAAA,eACfZ,OAAA,CAACH,aAAa;QACZoB,KAAK,EAAC,cAAc;QACpBC,WAAW,EAAC,gEAAgE;QAC5EC,IAAI,EAAET,WAAY;QAClBU,QAAQ,EAAC;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC,eAGnBhB,OAAA,CAACF,mBAAmB;MAACqB,IAAI,EAAER;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAExB,CAAC;AAACK,GAAA,GA/DIZ,qBAAqB;AAiE3B,eAAeA,qBAAqB;AAAC,IAAAN,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}