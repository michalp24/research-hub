{"ast":null,"code":"var _jsxFileName = \"/Users/mpechardo/Desktop/NVIDIA/Research Labs Template Hub/src/components/CodeContainer/CodeContainerShowcase.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport CodeContainer from './CodeContainer';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowcaseContainer = styled.div`\n  margin-bottom: 4rem;\n`;\n_c = ShowcaseContainer;\nconst ShowcaseTitle = styled.h2`\n  font-size: 2rem;\n  margin-bottom: 1.5rem;\n  color: #333;\n`;\n_c2 = ShowcaseTitle;\nconst ExampleContainer = styled.div`\n  margin: 2rem 0;\n  padding: 2rem;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c3 = ExampleContainer;\nconst CodeBlock = styled.div`\n  position: relative;\n  background: #f5f5f5;\n  border-radius: 4px;\n  margin: 1rem 0;\n  overflow: hidden;\n\n  pre {\n    margin: 0 !important;\n    background: #f5f5f5 !important;\n  }\n\n  code {\n    background: #f5f5f5 !important;\n  }\n`;\n_c4 = CodeBlock;\nconst CopyButton = styled.button`\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: #fff;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  font-size: 0.875rem;\n  color: #666;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  z-index: 1;\n\n  &:hover {\n    background: #f0f0f0;\n    color: #333;\n  }\n\n  &.copied {\n    background: #76b900;\n    color: #fff;\n    border-color: #76b900;\n  }\n`;\n_c5 = CopyButton;\nconst CodeContainerShowcase = () => {\n  _s();\n  const exampleCode = `function generateScene() {\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n  const renderer = new THREE.WebGLRenderer();\n  \n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n  \n  const geometry = new THREE.BoxGeometry();\n  const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n  const cube = new THREE.Mesh(geometry, material);\n  \n  scene.add(cube);\n  camera.position.z = 5;\n  \n  function animate() {\n    requestAnimationFrame(animate);\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.01;\n    renderer.render(scene, camera);\n  }\n  \n  animate();\n}`;\n  const sectionCode = `<div class=\"nv-section\">\n  <div class=\"nv-container\">\n    <div class=\"nv-h--medium mb-3\">\n      Scene Generation\n    </div>\n    <p class=\"nv-text-large mb-5\">\n      This example demonstrates how to create a basic 3D scene using Three.js.\n    </p>\n    <div class=\"nv-code-container\">\n      <pre class=\"nv-code-block\">\n        <code class=\"language-javascript\">\n          ${exampleCode}\n        </code>\n      </pre>\n    </div>\n  </div>\n</div>`;\n  const [copied, setCopied] = React.useState(false);\n  const handleCopyCode = () => {\n    navigator.clipboard.writeText(sectionCode);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(ShowcaseContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ShowcaseTitle, {\n      children: \"Code Container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"nv-text-large mb-5\",\n      children: \"A container for displaying code snippets with NVIDIA styling and syntax highlighting.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExampleContainer, {\n      children: /*#__PURE__*/_jsxDEV(CodeContainer, {\n        title: \"Scene Generation\",\n        description: \"This example demonstrates how to create a basic 3D scene using Three.js.\",\n        code: exampleCode,\n        language: \"javascript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n      children: [/*#__PURE__*/_jsxDEV(CopyButton, {\n        className: copied ? 'copied' : '',\n        onClick: handleCopyCode,\n        children: copied ? 'Copied!' : 'Copy Code'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        language: \"html\",\n        style: tomorrow,\n        customStyle: {\n          background: '#f5f5f5',\n          margin: 0,\n          padding: '1.5rem',\n          borderRadius: '4px'\n        },\n        children: sectionCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeContainerShowcase, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");\n_c6 = CodeContainerShowcase;\nexport default CodeContainerShowcase;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ShowcaseContainer\");\n$RefreshReg$(_c2, \"ShowcaseTitle\");\n$RefreshReg$(_c3, \"ExampleContainer\");\n$RefreshReg$(_c4, \"CodeBlock\");\n$RefreshReg$(_c5, \"CopyButton\");\n$RefreshReg$(_c6, \"CodeContainerShowcase\");","map":{"version":3,"names":["React","styled","CodeContainer","Prism","SyntaxHighlighter","tomorrow","jsxDEV","_jsxDEV","ShowcaseContainer","div","_c","ShowcaseTitle","h2","_c2","ExampleContainer","_c3","CodeBlock","_c4","CopyButton","button","_c5","CodeContainerShowcase","_s","exampleCode","sectionCode","copied","setCopied","useState","handleCopyCode","navigator","clipboard","writeText","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","description","code","language","onClick","style","customStyle","background","margin","padding","borderRadius","_c6","$RefreshReg$"],"sources":["/Users/mpechardo/Desktop/NVIDIA/Research Labs Template Hub/src/components/CodeContainer/CodeContainerShowcase.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport CodeContainer from './CodeContainer';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst ShowcaseContainer = styled.div`\n  margin-bottom: 4rem;\n`;\n\nconst ShowcaseTitle = styled.h2`\n  font-size: 2rem;\n  margin-bottom: 1.5rem;\n  color: #333;\n`;\n\nconst ExampleContainer = styled.div`\n  margin: 2rem 0;\n  padding: 2rem;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst CodeBlock = styled.div`\n  position: relative;\n  background: #f5f5f5;\n  border-radius: 4px;\n  margin: 1rem 0;\n  overflow: hidden;\n\n  pre {\n    margin: 0 !important;\n    background: #f5f5f5 !important;\n  }\n\n  code {\n    background: #f5f5f5 !important;\n  }\n`;\n\nconst CopyButton = styled.button`\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: #fff;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  font-size: 0.875rem;\n  color: #666;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  z-index: 1;\n\n  &:hover {\n    background: #f0f0f0;\n    color: #333;\n  }\n\n  &.copied {\n    background: #76b900;\n    color: #fff;\n    border-color: #76b900;\n  }\n`;\n\nconst CodeContainerShowcase = () => {\n  const exampleCode = `function generateScene() {\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n  const renderer = new THREE.WebGLRenderer();\n  \n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n  \n  const geometry = new THREE.BoxGeometry();\n  const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n  const cube = new THREE.Mesh(geometry, material);\n  \n  scene.add(cube);\n  camera.position.z = 5;\n  \n  function animate() {\n    requestAnimationFrame(animate);\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.01;\n    renderer.render(scene, camera);\n  }\n  \n  animate();\n}`;\n\n  const sectionCode = `<div class=\"nv-section\">\n  <div class=\"nv-container\">\n    <div class=\"nv-h--medium mb-3\">\n      Scene Generation\n    </div>\n    <p class=\"nv-text-large mb-5\">\n      This example demonstrates how to create a basic 3D scene using Three.js.\n    </p>\n    <div class=\"nv-code-container\">\n      <pre class=\"nv-code-block\">\n        <code class=\"language-javascript\">\n          ${exampleCode}\n        </code>\n      </pre>\n    </div>\n  </div>\n</div>`;\n\n  const [copied, setCopied] = React.useState(false);\n\n  const handleCopyCode = () => {\n    navigator.clipboard.writeText(sectionCode);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <ShowcaseContainer>\n      <ShowcaseTitle>Code Container</ShowcaseTitle>\n      <p className=\"nv-text-large mb-5\">\n        A container for displaying code snippets with NVIDIA styling and syntax highlighting.\n      </p>\n\n      <ExampleContainer>\n        <CodeContainer\n          title=\"Scene Generation\"\n          description=\"This example demonstrates how to create a basic 3D scene using Three.js.\"\n          code={exampleCode}\n          language=\"javascript\"\n        />\n      </ExampleContainer>\n\n      <CodeBlock>\n        <CopyButton \n          className={copied ? 'copied' : ''} \n          onClick={handleCopyCode}\n        >\n          {copied ? 'Copied!' : 'Copy Code'}\n        </CopyButton>\n        <SyntaxHighlighter \n          language=\"html\" \n          style={tomorrow}\n          customStyle={{\n            background: '#f5f5f5',\n            margin: 0,\n            padding: '1.5rem',\n            borderRadius: '4px'\n          }}\n        >\n          {sectionCode}\n        </SyntaxHighlighter>\n      </CodeBlock>\n    </ShowcaseContainer>\n  );\n};\n\nexport default CodeContainerShowcase; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}